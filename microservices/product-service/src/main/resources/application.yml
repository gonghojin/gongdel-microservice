server.port: 7001
server.error.include-message: always

spring.application.name: product # 유레카 서비스가 마이크로서비스 식별자로 사용

app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
    
spring.data.mongodb:
  host: localhost
  port: 27017
  database: product-db

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.input:
    destination: products
    group: productsGroup # 소비자 그룹 생성_products 인스턴스 중 한 인스턴스로만 product 토픽 게시(중복방지)

spring.cloud.stream.bindings.input.consumer:
  maxAttempts: 3 # 데드 레터 대기열로 이동하기 전에 3회 재시도
  backOffInitialInterval: 500 # 처음 시도 시 500ms
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.input.consumer: # 데드레터 대기열
  autoBindDlq: true
  republishToDlq: true

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

logging:
  level:
    root: INFO
    com.gongdel: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---
spring.profiles: docker

server.port: 8080

app.eureka-server: eureka

spring.data.mongodb.host: mongodb

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka